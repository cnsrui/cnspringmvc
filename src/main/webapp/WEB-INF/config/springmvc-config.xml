<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <!--扫描含有controller的包-->
    <context:component-scan base-package="com.cnspringmvc.demo.controller"/>
    <context:component-scan base-package="com.cnspringmvc.demo.service"/>
    <!--使用Formatter需要添加下面一行-->
    <context:component-scan base-package="com.cnspringmvc.demo.formatter"/>

    <!--mvc:annotation-driven 标签表示注册用于注解控制器的请求处理方法的bean对象，简单解释就时注解的开关。-->
    <!--如果没有mvc:annotation-driven，resource元素会阻止任意控制器的访问。-->
    <!--如果不需要使用resource元素，则不需要使用annotation-driven-->
    <!--<mvc:annotation-driven/>-->

    <!--使用 Converter 或 Formatter，都需要在 annotation-driven 添加 conversion-service -->
    <mvc:annotation-driven conversion-service="conversionService"/>
    <!--mvc:resource标签表示单独处理静态资源，而不通过 Dispatcher Servlet-->
    <!--使得 /css 目录下的所有文件可见，以及允许显示所有的 html 文件-->
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/*.html" location="/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>


    <!--原始的映射关系-->
    <!--    <bean name="/product_input.action" class="com.cnspringmvc.demo.controller.InputProductController"/>
        <bean name="/product_save.action" class="com.cnspringmvc.demo.controller.SaveProductController"/>
    -->

    <!--视图解析器，负责解析视图-->
    <!--配置了前缀和后缀，以前访问 /WEB-INF/jsp/myPage.jsp，现在直接访问 myPage 即可。-->
    <!--需要修改controller中的页面文件的路径-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--注册StringToDateConverter-->
    <!--    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
            <property name="converters">
                <list>
                    <bean class="com.cnspringmvc.demo.converter.StringToDateConverter">
                        &lt;!&ndash;构造函数的参数，用于SimpleDateFormat的格式模式&ndash;&gt;
                        <constructor-arg type="java.lang.String" value="MM-dd-yyyy"/>
                    </bean>
                </list>
            </property>
        </bean>-->

    <!--注册 DateFormatter Formatter-->
    <!--    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
            <property name="formatters">
                <set>
                    <bean class="com.cnspringmvc.demo.formatter.DateFormatter">
                        <constructor-arg type="java.lang.String" value="MM-dd-yyyy" />
                    </bean>
                </set>
            </property>
        </bean>-->

    <!--注册 DateFormatter Formatter with Registrar-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatterRegistrars">
            <set>
                <bean class="com.cnspringmvc.demo.formatter.MyformatterRegistrar">
                    <constructor-arg type="java.lang.String" value="MM-dd-yyyy"/>
                </bean>
            </set>
        </property>
    </bean>

    <!--用于验证器查找某个属性的错误信息-->
    <!--也用于国际化的信息-->
    <!--ReloadableResourceBundleMessageSource表示可以程序在运行过程中实施加载message内容，而不用重启JVM-->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <!--只读取一个文件可以这样写-->
        <!--<property name="basename" value="/WEB-INF/resource/messages"/>-->
    <!--读取多个文件这样写-->
        <property name="basenames" >
            <list>
                <value>/WEB-INF/resource/messages</value>
                <value>/WEB-INF/resource/labels</value>
            </list>
        </property>
    </bean>

    <!--采用 AcceptHeaderLocaleResolver 类方式，用于设置SpringMVC的语言区域，实现信息的本地化-->
    <!--SpringMVC将读取浏览器的 accept-language 标题以确定浏览器要接受哪个语言区域-->
    <!--如果浏览器的语言区域与SpringMVC支持的相匹配，则设置能该区域。否则使用默认语言区域-->
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver">
    </bean>

    <!--采用 LocaleChangeInterceptor 方式，实现信息本地化-->
    <!--
    <bean id="localeChangeInterceptor"
          class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang" />
    </bean>

    <bean id="handlerMapping"
          class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="localeChangeInterceptor" />
            </list>
        </property>
    </bean>
    -->

    <!--用于上传文件，使用 Apache Commons UploadFile 组件-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="2000000"/>
    </bean>

</beans>